<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.sondev</groupId>
    <artifactId>identity-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>identity-service</name>
    <description>Identity service</description>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <java.version>21</java.version>
        <!--        version cho Lombok and MapStruct-->
        <projectlombok-lombok.version>1.18.30</projectlombok-lombok.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <spotless.version>2.43.0</spotless.version>
        <sonar.coverage.exclusions>
            src/main/java/com/sondev/identity_service/dto/**
            src/main/java/com/sondev/identity_service/entity/**
            src/main/java/com/sondev/identity_service/mapper/**
            src/main/java/com/sondev/identity_service/configuration/**
        </sonar.coverage.exclusions>
    </properties>
    <dependencies>

        <!--        Phục vụ cho viết Unit Test-->
        <!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-test -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.jacoco/jacoco-maven-plugin -->
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.12</version>
        </dependency>

        <!--        H2 database phục vụ cho việc unit test: scope -> test : chỉ khi nào test thì nó mới được chạy-->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.2.224</version>
            <scope>test</scope>
        </dependency>

        <!--        Giúp cho jackson có thể serialize kiểu LocalDate-->
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310 -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <!--        OAuth2-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.nimbusds/nimbus-jose-jwt -->
        <!--        <dependency>-->
        <!--            <groupId>com.nimbusds</groupId>-->
        <!--            <artifactId>nimbus-jose-jwt</artifactId>-->
        <!--            <version>9.30.1</version>-->
        <!--        </dependency>-->

        <!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-crypto -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
        </dependency>

        <!--Lombok-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${projectlombok-lombok.version}</version>
            <!-- Lombok chỉ sử dụng khi biên dịch, không đi kèm trong bản build cuối cùng -->
            <scope>provided</scope>
        </dependency>
        <!--MapStruct-->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!--        Validation-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
<!--            spotless : giúp format code-->
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless.version}</version>
                <configuration>
                    <java>
                        <removeUnusedImports />
                        <toggleOffOn/>
                        <trimTrailingWhitespace/>
                        <endWithNewline/>
                        <indent>
                            <tabs>true</tabs>
                            <spacesPerTab>4</spacesPerTab>
                        </indent>
                        <palantirJavaFormat/>
                        <importOrder>
                            <!-- Specify either order or file, but not both -->
                            <order>java,jakarta,org,com,com.diffplug,</order>
                        </importOrder>
                    </java>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>apply</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--    end spotless-->

            <!--            plugin Jacoco-->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.12</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>com/sondev/identity_service/dto/**</exclude>
                        <exclude>com/sondev/identity_service/entity/**</exclude>
                        <exclude>com/sondev/identity_service/mapper/**</exclude>
                        <exclude>com/sondev/identity_service/configuration/**</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <!--          end  plugin Jacoco-->

            <!--exclude lombok ra khoi maven-->
            <plugin>
                <!--default-->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--end default-->
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!--plugin lombok and mapstruct-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!--Việc kết hợp Lombok và MapStruct yêu cầu một plugin bổ sung để xử lý các annotation của Lombok khi biên dịch MapStruct.
                     MapStruct cần nhận diện được các getter/setter được Lombok tự động tạo ra.-->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${projectlombok-lombok.version}</version>
                        </path>
                        <path>
                            <!--Giúp cho mapstruct va lombok có thể phối hợp làm việc với nhau-->
                            <!--lombok-mapstruct-binding: Thư viện này đóng vai trò làm cầu nối giữa Lombok và MapStruct.
                            Nó giúp MapStruct hiểu được các getter/setter được tạo tự động bởi Lombok, cho phép bạn sử dụng cả Lombok và MapStruct trong cùng một class.-->
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${lombok-mapstruct-binding.version}</version>
                        </path>
                        <path>
                            <!--mapstruct-processor: Đây là trình biên dịch của MapStruct, giúp MapStruct xử lý các interface mapper và tạo ra các lớp ánh xạ tự động.-->
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <!--Tắt việc chèn timestamp vào file sinh ra bởi MapStruct. Điều này có thể giúp tránh các thay đổi không cần thiết trong file khi chỉ cần biên dịch lại mà không có thay đổi logic.-->
                        <arg>-Amapstruct.suppressGeneratorTimestamp=true</arg>
                        <!--Chỉ định rằng các mapper sẽ được quản lý bởi Spring. Điều này có nghĩa là bạn có thể sử dụng @Autowired để tiêm các mapper vào trong các class khác.-->
                        <arg>-Amapstruct.defaultComponentModel=spring</arg>
                        <!--Chỉ định rằng các mapper sẽ được quản lý bởi Spring. Điều này có nghĩa là bạn có thể sử dụng @Autowired để tiêm các mapper vào trong các class khác.-->
                        <arg>-Amapstruct.verbose=true</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
